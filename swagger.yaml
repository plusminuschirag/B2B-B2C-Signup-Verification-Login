openapi: 3.0.0
info:
  title: Scraping API Collection
  version: 1.0.0
  description: API Collection for Selenium Automation
servers:
  - url: http://localhost:3000
apis:
  - ./routers/*.js
tags:
  - name: B2B
    description: Endpoints for B2B
  - name: B2C
    description: Endpoints for B2C
  - name: Admin
    description: Endpoints for Admin

paths:
  /b2c/sign-up:
    post:
      tags:
        - B2C
      summary: Sign up for a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                schoolName:
                  type: string
                grade:
                  type: string
                state:
                  type: string
                country:
                  type: string
                email:
                  type: string
                password:
                  type: string

              example:
                userName: Chirag
                schoolName: Don Bosco
                grade: 11
                state: New Delhi
                country: India
                email: chiragsharma1906@gmail.com
                password: Chirag@123

      responses:
        '200':
          description: Passed
          content:
            application/json:
              schema:
                type: object
                properties:
                  sucess:
                    type: string
              example:
                success: Passed Middleware...

  /b2c/verify:
    post:
      tags:
        - B2C
      summary: Verify your existing user.
      parameters:
        - name: verificationId
          in: query
          description: verificationId found while sign-up
          required: true
          schema:
            type: string
      responses:
        202:
          description: Success

  /b2c/login:
    post:
      tags:
        - B2C
      summary: Login with user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string

              example:
                email: chiragsharma1906@gmail.com
                password: Chirag@123

      responses:
        200:
          description: Success

  /b2b/teacher-signup:
    post:
      tags:
        - B2B
      summary: Create a new teacher account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                teacherName:
                  type: string
                schoolName:
                  type: string
                grade:
                  type: string
                state:
                  type: string
                country:
                  type: string
                email:
                  type: string
                password:
                  type: string
              example:
                teacherName: TeacherX
                schoolName: Don Bosco
                grade: 11
                state: New Delhi
                country: India
                email: mr.x@donbosco.com
                password: Mr.x@12345
      responses:
        '201':
          description: Teacher created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  link:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /b2b/teacher-verify:
    post:
      tags:
        - B2B
      summary: Verify teacher account
      parameters:
        - in: query
          name: verificationId
          schema:
            type: string
      responses:
        '202':
          description: Teacher verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /b2b/teacher-login:
    post:
      tags:
        - B2B
      summary: Login as a teacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: mr.x@donbosco.com
                password: Mr.x@12345
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /b2b/upload-students:
    post:
      tags:
        - B2B
      summary: Upload student data in csv
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                csvFile:
                  type: string
                  format: binary
                teacherId:
                  type: string

      responses:
        '200':
          description: Data uploaded
  # /b2b/student-signup:
  #   post:
  #     tags:
  #       - B2B
  #     summary: Create a new student account
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #     responses:
  #       '201':
  #         description: Student created
  # Define other possible responses
  /b2b/student-verify:
    post:
      tags:
        - B2B
      summary: Verify student account
      parameters:
        - in: query
          name: verificationId
          schema:
            type: string
      responses:
        '200':
          description: Student verified
        # Define other possible responses
  /b2b/student-login:
    post:
      tags:
        - B2B
      summary: Login as a student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                # Define properties for student login
      responses:
        '200':
          description: Successful login
        # Define other possible responses

  /admin/sign-up:
    post:
      tags:
        - Admin
      summary: Sign up for a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string

              example:
                email: chiragsharma1906@gmail.com
                password: Chirag@123

      responses:
        '200':
          description: Passed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
              example:
                success: Passed Middleware...
  /admin/verify:
    post:
      tags:
        - Admin
      summary: Verify the admin account with the given verification ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: verificationId
          description: Verification ID received after sign-up
          required: true
          type: string
      responses:
        202:
          description: Admin verified successfully, now you can login
          schema:
            type: object
            properties:
              success:
                type: string
        400:
          description: Error while doing DB operation or login credentials failed
          schema:
            type: object
            properties:
              error:
                type: string
  /admin/login:
    post:
      tags:
        - Admin
      summary: Authenticate an admin user
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: chiragsharma1906@gmail.com
                password: Chirag@123
      responses:
        200:
          description: Admin logged in successfully
          schema:
            type: object
            properties:
              success:
                type: string
        400:
          description: Email not present in the database or incorrect password
          schema:
            type: object
            properties:
              error:
                type: string
